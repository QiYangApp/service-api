networks:
  frontend:
    driver: ${NETWORKS_DRIVER}
  backend:
    driver: ${NETWORKS_DRIVER}
volumes:
  redis:
    driver: ${VOLUMES_DRIVER}
  postgres:
    driver: ${VOLUMES_DRIVER}


services:

### Workspace Utilities ##################################
    workspace:
      build:
        context: ./workspace
        args:
          - CHANGE_SOURCE=${CHANGE_SOURCE}
          - SHELL_OH_MY_ZSH=${SHELL_OH_MY_ZSH}
          - WORKSPACE_GO_VERSION=${WORKSPACE_GO_VERSION}
      volumes:
        - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
        - ${DATA_PATH_HOST}/pkg:/go
      extra_hosts:
        - "dockerhost:${DOCKER_HOST_IP}"
      privileged: true
      tty: true
      environment:
        - WORKSPACE_TZ=${WORKSPACE_TZ}
      ports:
        - "${WORKSPACE_GO_PORT}:3000"
        - "${WORKSPACE_SSH_PORT}:22"
      networks:
        - frontend
        - backend
### Redis ################################################
    redis:
      build: ./redis
      volumes:
        - ${DATA_PATH_HOST}/redis:/data
      command: --requirepass ${REDIS_PASSWORD}
      ports:
        - "${REDIS_PORT}:6379"
      networks:
        - backend
### PostgreSQL ###########################################
    postgres:
      build:
        context: ./postgres
        args:
          - POSTGRES_VERSION=${POSTGRES_VERSION}
      volumes:
        - ${DATA_PATH_HOST}/postgres:/var/lib/postgresql/data
        - ${POSTGRES_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
      ports:
        - "${POSTGRES_PORT}:5432"
      environment:
        - POSTGRES_DB=${POSTGRES_DB}
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        - WORKSPACE_POSTGRES_INIT=${WORKSPACE_POSTGRES_INIT}
        - WORKSPACE_POSTGRES_DB=${WORKSPACE_POSTGRES_DB}
        - WORKSPACE_POSTGRES_USER=${WORKSPACE_POSTGRES_USER}
        - WORKSPACE_POSTGRES_PASSWD=${WORKSPACE_POSTGRES_PASSWD}
      networks:
        - backend
 