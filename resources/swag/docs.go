// Package swag Code generated by swaggo/swag. DO NOT EDIT
package swag

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "QiYang",
            "url": "https://github.com/QiYangApp/service-api",
            "email": "notice@myadream.com"
        },
        "license": {
            "name": "BSD 3-Clause \"New\" or \"Revised\" License",
            "url": "https://github.com/QiYangApp/service-api/blob/main/LICENSE"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/captcha/{type}": {
            "get": {
                "description": "获取验证码",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "获取验证码",
                "parameters": [
                    {
                        "type": "string",
                        "description": "验证码授权类型",
                        "name": "type",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "请求成功",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Data": {
                                            "$ref": "#/definitions/validator.CaptchaResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "校验验证码",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "校验验证码",
                "parameters": [
                    {
                        "type": "string",
                        "description": "验证码授权类型",
                        "name": "type",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "data",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/validator.CaptchaVerifyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "请求成功",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Data": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "response.Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "message": {
                    "type": "string"
                },
                "request_id": {
                    "type": "string"
                },
                "state": {
                    "$ref": "#/definitions/response.StateEnum"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "response.StateEnum": {
            "type": "string",
            "enum": [
                "success",
                "error",
                "warn",
                "fail"
            ],
            "x-enum-varnames": [
                "Success",
                "Error",
                "Warn",
                "Fail"
            ]
        },
        "validator.CaptchaResponse": {
            "type": "object",
            "properties": {
                "captcha": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "validator.CaptchaVerifyRequest": {
            "type": "object",
            "required": [
                "answer",
                "id",
                "token"
            ],
            "properties": {
                "answer": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "QiYang",
	Description:      "QiYangApiService",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
