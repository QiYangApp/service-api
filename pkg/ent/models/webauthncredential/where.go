// Code generated by ent, DO NOT EDIT.

package webauthncredential

import (
	"ent/models/predicate"
	"frame/util/timeutil"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int64) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int64) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int64) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int64) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int64) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int64) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int64) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int64) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int64) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldLTE(FieldID, id))
}

// Name applies equality check predicate on the "name" field. It's identical to NameEQ.
func Name(v string) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldEQ(FieldName, v))
}

// LowerName applies equality check predicate on the "lower_name" field. It's identical to LowerNameEQ.
func LowerName(v string) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldEQ(FieldLowerName, v))
}

// UserID applies equality check predicate on the "user_id" field. It's identical to UserIDEQ.
func UserID(v int64) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldEQ(FieldUserID, v))
}

// CredentialID applies equality check predicate on the "credential_id" field. It's identical to CredentialIDEQ.
func CredentialID(v []byte) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldEQ(FieldCredentialID, v))
}

// PublicKey applies equality check predicate on the "public_key" field. It's identical to PublicKeyEQ.
func PublicKey(v []byte) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldEQ(FieldPublicKey, v))
}

// AttestationType applies equality check predicate on the "attestation_type" field. It's identical to AttestationTypeEQ.
func AttestationType(v string) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldEQ(FieldAttestationType, v))
}

// AAGUID applies equality check predicate on the "AAGUID" field. It's identical to AAGUIDEQ.
func AAGUID(v []byte) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldEQ(FieldAAGUID, v))
}

// SignCount applies equality check predicate on the "sign_count" field. It's identical to SignCountEQ.
func SignCount(v uint32) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldEQ(FieldSignCount, v))
}

// CloneWarning applies equality check predicate on the "clone_warning" field. It's identical to CloneWarningEQ.
func CloneWarning(v bool) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldEQ(FieldCloneWarning, v))
}

// CreateTime applies equality check predicate on the "create_time" field. It's identical to CreateTimeEQ.
func CreateTime(v timeutil.TimeStamp) predicate.WebAuthnCredential {
	vc := int64(v)
	return predicate.WebAuthnCredential(sql.FieldEQ(FieldCreateTime, vc))
}

// UpdateTime applies equality check predicate on the "update_time" field. It's identical to UpdateTimeEQ.
func UpdateTime(v timeutil.TimeStamp) predicate.WebAuthnCredential {
	vc := int64(v)
	return predicate.WebAuthnCredential(sql.FieldEQ(FieldUpdateTime, vc))
}

// NameEQ applies the EQ predicate on the "name" field.
func NameEQ(v string) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "name" field.
func NameNEQ(v string) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "name" field.
func NameIn(vs ...string) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "name" field.
func NameNotIn(vs ...string) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "name" field.
func NameGT(v string) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "name" field.
func NameGTE(v string) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "name" field.
func NameLT(v string) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "name" field.
func NameLTE(v string) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "name" field.
func NameContains(v string) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "name" field.
func NameHasPrefix(v string) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "name" field.
func NameHasSuffix(v string) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldHasSuffix(FieldName, v))
}

// NameEqualFold applies the EqualFold predicate on the "name" field.
func NameEqualFold(v string) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "name" field.
func NameContainsFold(v string) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldContainsFold(FieldName, v))
}

// LowerNameEQ applies the EQ predicate on the "lower_name" field.
func LowerNameEQ(v string) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldEQ(FieldLowerName, v))
}

// LowerNameNEQ applies the NEQ predicate on the "lower_name" field.
func LowerNameNEQ(v string) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldNEQ(FieldLowerName, v))
}

// LowerNameIn applies the In predicate on the "lower_name" field.
func LowerNameIn(vs ...string) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldIn(FieldLowerName, vs...))
}

// LowerNameNotIn applies the NotIn predicate on the "lower_name" field.
func LowerNameNotIn(vs ...string) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldNotIn(FieldLowerName, vs...))
}

// LowerNameGT applies the GT predicate on the "lower_name" field.
func LowerNameGT(v string) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldGT(FieldLowerName, v))
}

// LowerNameGTE applies the GTE predicate on the "lower_name" field.
func LowerNameGTE(v string) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldGTE(FieldLowerName, v))
}

// LowerNameLT applies the LT predicate on the "lower_name" field.
func LowerNameLT(v string) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldLT(FieldLowerName, v))
}

// LowerNameLTE applies the LTE predicate on the "lower_name" field.
func LowerNameLTE(v string) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldLTE(FieldLowerName, v))
}

// LowerNameContains applies the Contains predicate on the "lower_name" field.
func LowerNameContains(v string) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldContains(FieldLowerName, v))
}

// LowerNameHasPrefix applies the HasPrefix predicate on the "lower_name" field.
func LowerNameHasPrefix(v string) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldHasPrefix(FieldLowerName, v))
}

// LowerNameHasSuffix applies the HasSuffix predicate on the "lower_name" field.
func LowerNameHasSuffix(v string) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldHasSuffix(FieldLowerName, v))
}

// LowerNameEqualFold applies the EqualFold predicate on the "lower_name" field.
func LowerNameEqualFold(v string) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldEqualFold(FieldLowerName, v))
}

// LowerNameContainsFold applies the ContainsFold predicate on the "lower_name" field.
func LowerNameContainsFold(v string) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldContainsFold(FieldLowerName, v))
}

// UserIDEQ applies the EQ predicate on the "user_id" field.
func UserIDEQ(v int64) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldEQ(FieldUserID, v))
}

// UserIDNEQ applies the NEQ predicate on the "user_id" field.
func UserIDNEQ(v int64) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldNEQ(FieldUserID, v))
}

// UserIDIn applies the In predicate on the "user_id" field.
func UserIDIn(vs ...int64) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldIn(FieldUserID, vs...))
}

// UserIDNotIn applies the NotIn predicate on the "user_id" field.
func UserIDNotIn(vs ...int64) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldNotIn(FieldUserID, vs...))
}

// UserIDGT applies the GT predicate on the "user_id" field.
func UserIDGT(v int64) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldGT(FieldUserID, v))
}

// UserIDGTE applies the GTE predicate on the "user_id" field.
func UserIDGTE(v int64) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldGTE(FieldUserID, v))
}

// UserIDLT applies the LT predicate on the "user_id" field.
func UserIDLT(v int64) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldLT(FieldUserID, v))
}

// UserIDLTE applies the LTE predicate on the "user_id" field.
func UserIDLTE(v int64) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldLTE(FieldUserID, v))
}

// CredentialIDEQ applies the EQ predicate on the "credential_id" field.
func CredentialIDEQ(v []byte) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldEQ(FieldCredentialID, v))
}

// CredentialIDNEQ applies the NEQ predicate on the "credential_id" field.
func CredentialIDNEQ(v []byte) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldNEQ(FieldCredentialID, v))
}

// CredentialIDIn applies the In predicate on the "credential_id" field.
func CredentialIDIn(vs ...[]byte) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldIn(FieldCredentialID, vs...))
}

// CredentialIDNotIn applies the NotIn predicate on the "credential_id" field.
func CredentialIDNotIn(vs ...[]byte) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldNotIn(FieldCredentialID, vs...))
}

// CredentialIDGT applies the GT predicate on the "credential_id" field.
func CredentialIDGT(v []byte) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldGT(FieldCredentialID, v))
}

// CredentialIDGTE applies the GTE predicate on the "credential_id" field.
func CredentialIDGTE(v []byte) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldGTE(FieldCredentialID, v))
}

// CredentialIDLT applies the LT predicate on the "credential_id" field.
func CredentialIDLT(v []byte) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldLT(FieldCredentialID, v))
}

// CredentialIDLTE applies the LTE predicate on the "credential_id" field.
func CredentialIDLTE(v []byte) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldLTE(FieldCredentialID, v))
}

// PublicKeyEQ applies the EQ predicate on the "public_key" field.
func PublicKeyEQ(v []byte) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldEQ(FieldPublicKey, v))
}

// PublicKeyNEQ applies the NEQ predicate on the "public_key" field.
func PublicKeyNEQ(v []byte) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldNEQ(FieldPublicKey, v))
}

// PublicKeyIn applies the In predicate on the "public_key" field.
func PublicKeyIn(vs ...[]byte) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldIn(FieldPublicKey, vs...))
}

// PublicKeyNotIn applies the NotIn predicate on the "public_key" field.
func PublicKeyNotIn(vs ...[]byte) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldNotIn(FieldPublicKey, vs...))
}

// PublicKeyGT applies the GT predicate on the "public_key" field.
func PublicKeyGT(v []byte) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldGT(FieldPublicKey, v))
}

// PublicKeyGTE applies the GTE predicate on the "public_key" field.
func PublicKeyGTE(v []byte) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldGTE(FieldPublicKey, v))
}

// PublicKeyLT applies the LT predicate on the "public_key" field.
func PublicKeyLT(v []byte) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldLT(FieldPublicKey, v))
}

// PublicKeyLTE applies the LTE predicate on the "public_key" field.
func PublicKeyLTE(v []byte) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldLTE(FieldPublicKey, v))
}

// AttestationTypeEQ applies the EQ predicate on the "attestation_type" field.
func AttestationTypeEQ(v string) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldEQ(FieldAttestationType, v))
}

// AttestationTypeNEQ applies the NEQ predicate on the "attestation_type" field.
func AttestationTypeNEQ(v string) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldNEQ(FieldAttestationType, v))
}

// AttestationTypeIn applies the In predicate on the "attestation_type" field.
func AttestationTypeIn(vs ...string) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldIn(FieldAttestationType, vs...))
}

// AttestationTypeNotIn applies the NotIn predicate on the "attestation_type" field.
func AttestationTypeNotIn(vs ...string) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldNotIn(FieldAttestationType, vs...))
}

// AttestationTypeGT applies the GT predicate on the "attestation_type" field.
func AttestationTypeGT(v string) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldGT(FieldAttestationType, v))
}

// AttestationTypeGTE applies the GTE predicate on the "attestation_type" field.
func AttestationTypeGTE(v string) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldGTE(FieldAttestationType, v))
}

// AttestationTypeLT applies the LT predicate on the "attestation_type" field.
func AttestationTypeLT(v string) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldLT(FieldAttestationType, v))
}

// AttestationTypeLTE applies the LTE predicate on the "attestation_type" field.
func AttestationTypeLTE(v string) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldLTE(FieldAttestationType, v))
}

// AttestationTypeContains applies the Contains predicate on the "attestation_type" field.
func AttestationTypeContains(v string) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldContains(FieldAttestationType, v))
}

// AttestationTypeHasPrefix applies the HasPrefix predicate on the "attestation_type" field.
func AttestationTypeHasPrefix(v string) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldHasPrefix(FieldAttestationType, v))
}

// AttestationTypeHasSuffix applies the HasSuffix predicate on the "attestation_type" field.
func AttestationTypeHasSuffix(v string) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldHasSuffix(FieldAttestationType, v))
}

// AttestationTypeEqualFold applies the EqualFold predicate on the "attestation_type" field.
func AttestationTypeEqualFold(v string) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldEqualFold(FieldAttestationType, v))
}

// AttestationTypeContainsFold applies the ContainsFold predicate on the "attestation_type" field.
func AttestationTypeContainsFold(v string) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldContainsFold(FieldAttestationType, v))
}

// AAGUIDEQ applies the EQ predicate on the "AAGUID" field.
func AAGUIDEQ(v []byte) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldEQ(FieldAAGUID, v))
}

// AAGUIDNEQ applies the NEQ predicate on the "AAGUID" field.
func AAGUIDNEQ(v []byte) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldNEQ(FieldAAGUID, v))
}

// AAGUIDIn applies the In predicate on the "AAGUID" field.
func AAGUIDIn(vs ...[]byte) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldIn(FieldAAGUID, vs...))
}

// AAGUIDNotIn applies the NotIn predicate on the "AAGUID" field.
func AAGUIDNotIn(vs ...[]byte) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldNotIn(FieldAAGUID, vs...))
}

// AAGUIDGT applies the GT predicate on the "AAGUID" field.
func AAGUIDGT(v []byte) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldGT(FieldAAGUID, v))
}

// AAGUIDGTE applies the GTE predicate on the "AAGUID" field.
func AAGUIDGTE(v []byte) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldGTE(FieldAAGUID, v))
}

// AAGUIDLT applies the LT predicate on the "AAGUID" field.
func AAGUIDLT(v []byte) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldLT(FieldAAGUID, v))
}

// AAGUIDLTE applies the LTE predicate on the "AAGUID" field.
func AAGUIDLTE(v []byte) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldLTE(FieldAAGUID, v))
}

// SignCountEQ applies the EQ predicate on the "sign_count" field.
func SignCountEQ(v uint32) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldEQ(FieldSignCount, v))
}

// SignCountNEQ applies the NEQ predicate on the "sign_count" field.
func SignCountNEQ(v uint32) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldNEQ(FieldSignCount, v))
}

// SignCountIn applies the In predicate on the "sign_count" field.
func SignCountIn(vs ...uint32) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldIn(FieldSignCount, vs...))
}

// SignCountNotIn applies the NotIn predicate on the "sign_count" field.
func SignCountNotIn(vs ...uint32) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldNotIn(FieldSignCount, vs...))
}

// SignCountGT applies the GT predicate on the "sign_count" field.
func SignCountGT(v uint32) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldGT(FieldSignCount, v))
}

// SignCountGTE applies the GTE predicate on the "sign_count" field.
func SignCountGTE(v uint32) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldGTE(FieldSignCount, v))
}

// SignCountLT applies the LT predicate on the "sign_count" field.
func SignCountLT(v uint32) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldLT(FieldSignCount, v))
}

// SignCountLTE applies the LTE predicate on the "sign_count" field.
func SignCountLTE(v uint32) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldLTE(FieldSignCount, v))
}

// CloneWarningEQ applies the EQ predicate on the "clone_warning" field.
func CloneWarningEQ(v bool) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldEQ(FieldCloneWarning, v))
}

// CloneWarningNEQ applies the NEQ predicate on the "clone_warning" field.
func CloneWarningNEQ(v bool) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.FieldNEQ(FieldCloneWarning, v))
}

// CreateTimeEQ applies the EQ predicate on the "create_time" field.
func CreateTimeEQ(v timeutil.TimeStamp) predicate.WebAuthnCredential {
	vc := int64(v)
	return predicate.WebAuthnCredential(sql.FieldEQ(FieldCreateTime, vc))
}

// CreateTimeNEQ applies the NEQ predicate on the "create_time" field.
func CreateTimeNEQ(v timeutil.TimeStamp) predicate.WebAuthnCredential {
	vc := int64(v)
	return predicate.WebAuthnCredential(sql.FieldNEQ(FieldCreateTime, vc))
}

// CreateTimeIn applies the In predicate on the "create_time" field.
func CreateTimeIn(vs ...timeutil.TimeStamp) predicate.WebAuthnCredential {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = int64(vs[i])
	}
	return predicate.WebAuthnCredential(sql.FieldIn(FieldCreateTime, v...))
}

// CreateTimeNotIn applies the NotIn predicate on the "create_time" field.
func CreateTimeNotIn(vs ...timeutil.TimeStamp) predicate.WebAuthnCredential {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = int64(vs[i])
	}
	return predicate.WebAuthnCredential(sql.FieldNotIn(FieldCreateTime, v...))
}

// CreateTimeGT applies the GT predicate on the "create_time" field.
func CreateTimeGT(v timeutil.TimeStamp) predicate.WebAuthnCredential {
	vc := int64(v)
	return predicate.WebAuthnCredential(sql.FieldGT(FieldCreateTime, vc))
}

// CreateTimeGTE applies the GTE predicate on the "create_time" field.
func CreateTimeGTE(v timeutil.TimeStamp) predicate.WebAuthnCredential {
	vc := int64(v)
	return predicate.WebAuthnCredential(sql.FieldGTE(FieldCreateTime, vc))
}

// CreateTimeLT applies the LT predicate on the "create_time" field.
func CreateTimeLT(v timeutil.TimeStamp) predicate.WebAuthnCredential {
	vc := int64(v)
	return predicate.WebAuthnCredential(sql.FieldLT(FieldCreateTime, vc))
}

// CreateTimeLTE applies the LTE predicate on the "create_time" field.
func CreateTimeLTE(v timeutil.TimeStamp) predicate.WebAuthnCredential {
	vc := int64(v)
	return predicate.WebAuthnCredential(sql.FieldLTE(FieldCreateTime, vc))
}

// UpdateTimeEQ applies the EQ predicate on the "update_time" field.
func UpdateTimeEQ(v timeutil.TimeStamp) predicate.WebAuthnCredential {
	vc := int64(v)
	return predicate.WebAuthnCredential(sql.FieldEQ(FieldUpdateTime, vc))
}

// UpdateTimeNEQ applies the NEQ predicate on the "update_time" field.
func UpdateTimeNEQ(v timeutil.TimeStamp) predicate.WebAuthnCredential {
	vc := int64(v)
	return predicate.WebAuthnCredential(sql.FieldNEQ(FieldUpdateTime, vc))
}

// UpdateTimeIn applies the In predicate on the "update_time" field.
func UpdateTimeIn(vs ...timeutil.TimeStamp) predicate.WebAuthnCredential {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = int64(vs[i])
	}
	return predicate.WebAuthnCredential(sql.FieldIn(FieldUpdateTime, v...))
}

// UpdateTimeNotIn applies the NotIn predicate on the "update_time" field.
func UpdateTimeNotIn(vs ...timeutil.TimeStamp) predicate.WebAuthnCredential {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = int64(vs[i])
	}
	return predicate.WebAuthnCredential(sql.FieldNotIn(FieldUpdateTime, v...))
}

// UpdateTimeGT applies the GT predicate on the "update_time" field.
func UpdateTimeGT(v timeutil.TimeStamp) predicate.WebAuthnCredential {
	vc := int64(v)
	return predicate.WebAuthnCredential(sql.FieldGT(FieldUpdateTime, vc))
}

// UpdateTimeGTE applies the GTE predicate on the "update_time" field.
func UpdateTimeGTE(v timeutil.TimeStamp) predicate.WebAuthnCredential {
	vc := int64(v)
	return predicate.WebAuthnCredential(sql.FieldGTE(FieldUpdateTime, vc))
}

// UpdateTimeLT applies the LT predicate on the "update_time" field.
func UpdateTimeLT(v timeutil.TimeStamp) predicate.WebAuthnCredential {
	vc := int64(v)
	return predicate.WebAuthnCredential(sql.FieldLT(FieldUpdateTime, vc))
}

// UpdateTimeLTE applies the LTE predicate on the "update_time" field.
func UpdateTimeLTE(v timeutil.TimeStamp) predicate.WebAuthnCredential {
	vc := int64(v)
	return predicate.WebAuthnCredential(sql.FieldLTE(FieldUpdateTime, vc))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.WebAuthnCredential) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.WebAuthnCredential) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.WebAuthnCredential) predicate.WebAuthnCredential {
	return predicate.WebAuthnCredential(sql.NotPredicates(p))
}
