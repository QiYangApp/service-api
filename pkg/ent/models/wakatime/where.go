// Code generated by ent, DO NOT EDIT.

package wakatime

import (
	"ent/models/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldLTE(FieldID, id))
}

// UserID applies equality check predicate on the "user_id" field. It's identical to UserIDEQ.
func UserID(v uuid.UUID) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldEQ(FieldUserID, v))
}

// Key applies equality check predicate on the "key" field. It's identical to KeyEQ.
func Key(v string) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldEQ(FieldKey, v))
}

// API applies equality check predicate on the "api" field. It's identical to APIEQ.
func API(v string) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldEQ(FieldAPI, v))
}

// State applies equality check predicate on the "state" field. It's identical to StateEQ.
func State(v string) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldEQ(FieldState, v))
}

// CreateTime applies equality check predicate on the "create_time" field. It's identical to CreateTimeEQ.
func CreateTime(v time.Time) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldEQ(FieldCreateTime, v))
}

// UpdateTime applies equality check predicate on the "update_time" field. It's identical to UpdateTimeEQ.
func UpdateTime(v time.Time) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldEQ(FieldUpdateTime, v))
}

// UserIDEQ applies the EQ predicate on the "user_id" field.
func UserIDEQ(v uuid.UUID) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldEQ(FieldUserID, v))
}

// UserIDNEQ applies the NEQ predicate on the "user_id" field.
func UserIDNEQ(v uuid.UUID) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldNEQ(FieldUserID, v))
}

// UserIDIn applies the In predicate on the "user_id" field.
func UserIDIn(vs ...uuid.UUID) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldIn(FieldUserID, vs...))
}

// UserIDNotIn applies the NotIn predicate on the "user_id" field.
func UserIDNotIn(vs ...uuid.UUID) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldNotIn(FieldUserID, vs...))
}

// UserIDGT applies the GT predicate on the "user_id" field.
func UserIDGT(v uuid.UUID) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldGT(FieldUserID, v))
}

// UserIDGTE applies the GTE predicate on the "user_id" field.
func UserIDGTE(v uuid.UUID) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldGTE(FieldUserID, v))
}

// UserIDLT applies the LT predicate on the "user_id" field.
func UserIDLT(v uuid.UUID) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldLT(FieldUserID, v))
}

// UserIDLTE applies the LTE predicate on the "user_id" field.
func UserIDLTE(v uuid.UUID) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldLTE(FieldUserID, v))
}

// KeyEQ applies the EQ predicate on the "key" field.
func KeyEQ(v string) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldEQ(FieldKey, v))
}

// KeyNEQ applies the NEQ predicate on the "key" field.
func KeyNEQ(v string) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldNEQ(FieldKey, v))
}

// KeyIn applies the In predicate on the "key" field.
func KeyIn(vs ...string) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldIn(FieldKey, vs...))
}

// KeyNotIn applies the NotIn predicate on the "key" field.
func KeyNotIn(vs ...string) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldNotIn(FieldKey, vs...))
}

// KeyGT applies the GT predicate on the "key" field.
func KeyGT(v string) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldGT(FieldKey, v))
}

// KeyGTE applies the GTE predicate on the "key" field.
func KeyGTE(v string) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldGTE(FieldKey, v))
}

// KeyLT applies the LT predicate on the "key" field.
func KeyLT(v string) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldLT(FieldKey, v))
}

// KeyLTE applies the LTE predicate on the "key" field.
func KeyLTE(v string) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldLTE(FieldKey, v))
}

// KeyContains applies the Contains predicate on the "key" field.
func KeyContains(v string) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldContains(FieldKey, v))
}

// KeyHasPrefix applies the HasPrefix predicate on the "key" field.
func KeyHasPrefix(v string) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldHasPrefix(FieldKey, v))
}

// KeyHasSuffix applies the HasSuffix predicate on the "key" field.
func KeyHasSuffix(v string) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldHasSuffix(FieldKey, v))
}

// KeyEqualFold applies the EqualFold predicate on the "key" field.
func KeyEqualFold(v string) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldEqualFold(FieldKey, v))
}

// KeyContainsFold applies the ContainsFold predicate on the "key" field.
func KeyContainsFold(v string) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldContainsFold(FieldKey, v))
}

// APIEQ applies the EQ predicate on the "api" field.
func APIEQ(v string) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldEQ(FieldAPI, v))
}

// APINEQ applies the NEQ predicate on the "api" field.
func APINEQ(v string) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldNEQ(FieldAPI, v))
}

// APIIn applies the In predicate on the "api" field.
func APIIn(vs ...string) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldIn(FieldAPI, vs...))
}

// APINotIn applies the NotIn predicate on the "api" field.
func APINotIn(vs ...string) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldNotIn(FieldAPI, vs...))
}

// APIGT applies the GT predicate on the "api" field.
func APIGT(v string) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldGT(FieldAPI, v))
}

// APIGTE applies the GTE predicate on the "api" field.
func APIGTE(v string) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldGTE(FieldAPI, v))
}

// APILT applies the LT predicate on the "api" field.
func APILT(v string) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldLT(FieldAPI, v))
}

// APILTE applies the LTE predicate on the "api" field.
func APILTE(v string) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldLTE(FieldAPI, v))
}

// APIContains applies the Contains predicate on the "api" field.
func APIContains(v string) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldContains(FieldAPI, v))
}

// APIHasPrefix applies the HasPrefix predicate on the "api" field.
func APIHasPrefix(v string) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldHasPrefix(FieldAPI, v))
}

// APIHasSuffix applies the HasSuffix predicate on the "api" field.
func APIHasSuffix(v string) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldHasSuffix(FieldAPI, v))
}

// APIEqualFold applies the EqualFold predicate on the "api" field.
func APIEqualFold(v string) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldEqualFold(FieldAPI, v))
}

// APIContainsFold applies the ContainsFold predicate on the "api" field.
func APIContainsFold(v string) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldContainsFold(FieldAPI, v))
}

// StateEQ applies the EQ predicate on the "state" field.
func StateEQ(v string) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldEQ(FieldState, v))
}

// StateNEQ applies the NEQ predicate on the "state" field.
func StateNEQ(v string) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldNEQ(FieldState, v))
}

// StateIn applies the In predicate on the "state" field.
func StateIn(vs ...string) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldIn(FieldState, vs...))
}

// StateNotIn applies the NotIn predicate on the "state" field.
func StateNotIn(vs ...string) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldNotIn(FieldState, vs...))
}

// StateGT applies the GT predicate on the "state" field.
func StateGT(v string) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldGT(FieldState, v))
}

// StateGTE applies the GTE predicate on the "state" field.
func StateGTE(v string) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldGTE(FieldState, v))
}

// StateLT applies the LT predicate on the "state" field.
func StateLT(v string) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldLT(FieldState, v))
}

// StateLTE applies the LTE predicate on the "state" field.
func StateLTE(v string) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldLTE(FieldState, v))
}

// StateContains applies the Contains predicate on the "state" field.
func StateContains(v string) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldContains(FieldState, v))
}

// StateHasPrefix applies the HasPrefix predicate on the "state" field.
func StateHasPrefix(v string) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldHasPrefix(FieldState, v))
}

// StateHasSuffix applies the HasSuffix predicate on the "state" field.
func StateHasSuffix(v string) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldHasSuffix(FieldState, v))
}

// StateEqualFold applies the EqualFold predicate on the "state" field.
func StateEqualFold(v string) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldEqualFold(FieldState, v))
}

// StateContainsFold applies the ContainsFold predicate on the "state" field.
func StateContainsFold(v string) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldContainsFold(FieldState, v))
}

// CreateTimeEQ applies the EQ predicate on the "create_time" field.
func CreateTimeEQ(v time.Time) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldEQ(FieldCreateTime, v))
}

// CreateTimeNEQ applies the NEQ predicate on the "create_time" field.
func CreateTimeNEQ(v time.Time) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldNEQ(FieldCreateTime, v))
}

// CreateTimeIn applies the In predicate on the "create_time" field.
func CreateTimeIn(vs ...time.Time) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldIn(FieldCreateTime, vs...))
}

// CreateTimeNotIn applies the NotIn predicate on the "create_time" field.
func CreateTimeNotIn(vs ...time.Time) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldNotIn(FieldCreateTime, vs...))
}

// CreateTimeGT applies the GT predicate on the "create_time" field.
func CreateTimeGT(v time.Time) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldGT(FieldCreateTime, v))
}

// CreateTimeGTE applies the GTE predicate on the "create_time" field.
func CreateTimeGTE(v time.Time) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldGTE(FieldCreateTime, v))
}

// CreateTimeLT applies the LT predicate on the "create_time" field.
func CreateTimeLT(v time.Time) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldLT(FieldCreateTime, v))
}

// CreateTimeLTE applies the LTE predicate on the "create_time" field.
func CreateTimeLTE(v time.Time) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldLTE(FieldCreateTime, v))
}

// UpdateTimeEQ applies the EQ predicate on the "update_time" field.
func UpdateTimeEQ(v time.Time) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldEQ(FieldUpdateTime, v))
}

// UpdateTimeNEQ applies the NEQ predicate on the "update_time" field.
func UpdateTimeNEQ(v time.Time) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldNEQ(FieldUpdateTime, v))
}

// UpdateTimeIn applies the In predicate on the "update_time" field.
func UpdateTimeIn(vs ...time.Time) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldIn(FieldUpdateTime, vs...))
}

// UpdateTimeNotIn applies the NotIn predicate on the "update_time" field.
func UpdateTimeNotIn(vs ...time.Time) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldNotIn(FieldUpdateTime, vs...))
}

// UpdateTimeGT applies the GT predicate on the "update_time" field.
func UpdateTimeGT(v time.Time) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldGT(FieldUpdateTime, v))
}

// UpdateTimeGTE applies the GTE predicate on the "update_time" field.
func UpdateTimeGTE(v time.Time) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldGTE(FieldUpdateTime, v))
}

// UpdateTimeLT applies the LT predicate on the "update_time" field.
func UpdateTimeLT(v time.Time) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldLT(FieldUpdateTime, v))
}

// UpdateTimeLTE applies the LTE predicate on the "update_time" field.
func UpdateTimeLTE(v time.Time) predicate.Wakatime {
	return predicate.Wakatime(sql.FieldLTE(FieldUpdateTime, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Wakatime) predicate.Wakatime {
	return predicate.Wakatime(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Wakatime) predicate.Wakatime {
	return predicate.Wakatime(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Wakatime) predicate.Wakatime {
	return predicate.Wakatime(sql.NotPredicates(p))
}
